/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Gestion_Citerne.java
 *
 * Created on Jan 12, 2011, 10:01:19 AM
 */
package Aph.DAO.Impl.UI;

import Aph.Citerne;
import Aph.DAO.Impl.TechnicienProduitDAOImpl;
import Aph.ProduitDélivré;
import Aph.TotalProduitDélivré;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Medard
 */
public class Gestion_Citerne extends javax.swing.JFrame {

    private Object[][] citerneInUse;
    private Object[] tableColumns;
    private DAOS daos;
    private boolean listLoadCit, listLoad;
    private DefaultListModel lstProdModel, lstCiterneModel;
    private List<Integer> citVideIds = new ArrayList<Integer>();
    private List<Integer> prodIds = new ArrayList<Integer>();
    private CiterneUI citerneUI;
    private AddInCiterneUI addInCiterneUI;
    private List<Citerne> inUseCiterne;
    private List<Citerne> emptyCiterne;
    private ProduitDélivré produitDeliv;
    private TechnicienProduitDAOImpl techDAOImpl;
    private String déstination, chosenContent;
    private Citerne citerne;

    /** Creates new form Gestion_Citerne */
    public Gestion_Citerne() {
        initComponents();
        this.setTitle("Gestion des citernes");
        daos = new DAOS();
        citerneUI = new CiterneUI();
        addInCiterneUI = new AddInCiterneUI();
        citerneUI.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        addInCiterneUI.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        lstProdModel = new DefaultListModel();
        lstCiterneModel = new DefaultListModel();
        techDAOImpl = new TechnicienProduitDAOImpl();
        listLoad = true;
        listLoadCit = true;
    }

    public DAOS getDaos() {
        return daos;
    }

    public TechnicienProduitDAOImpl getTechDAOImpl() {
        return techDAOImpl;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblCiterneInUse = new javax.swing.JTable();
        btnModifier = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstProdDispo = new javax.swing.JList();
        lblQuantité = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblDélivreur = new javax.swing.JLabel();
        lblNom = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        cbxContent = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstCiterneVide = new javax.swing.JList();
        btnOK = new javax.swing.JButton();
        txtQuantité = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lblProdDispo = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        btnCharger = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        lblCiterneNom = new javax.swing.JLabel();
        lblVolume = new javax.swing.JLabel();
        btnAnnuler = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        cbxSélectDest = new javax.swing.JComboBox();
        btnAller = new javax.swing.JButton();
        btnDéconnecter = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Citerne en usage", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 204))); // NOI18N

        tblCiterneInUse.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nom", "Volume(m³)", "Contenu", "Quantité(litres)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCiterneInUse.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tblCiterneInUse);

        btnModifier.setText("Modifier");
        btnModifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifierActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnModifier)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                    .addComponent(btnModifier))
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Produits disponibles", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 204))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel3.setText("Délivreur:");

        lstProdDispo.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstProdDispo.setToolTipText("Produits disponibles");
        lstProdDispo.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstProdDispoValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(lstProdDispo);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel1.setText("Nom:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel2.setText("Quantité:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblQuantité, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDélivreur, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNom, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(jLabel3))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(jLabel2))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblDélivreur, lblNom, lblQuantité});

        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel1)
                        .addGap(7, 7, 7)
                        .addComponent(lblNom, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblQuantité, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblDélivreur, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lblDélivreur, lblNom, lblQuantité});

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Citernes vides", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 204))); // NOI18N

        cbxContent.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Sélectionner contenu" }));
        cbxContent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxContentActionPerformed(evt);
            }
        });

        lstCiterneVide.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstCiterneVide.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstCiterneVideValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstCiterneVide);

        btnOK.setFont(new java.awt.Font("Tahoma", 2, 11));
        btnOK.setText("OK");
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        jLabel5.setText("Produit disponible:");

        jLabel6.setText("litres");

        jLabel7.setText("Nom:");

        jLabel8.setText("Volume:");

        jLabel9.setText("Produit à charger:");

        jLabel10.setText("litres");

        btnCharger.setFont(new java.awt.Font("Tahoma", 2, 11));
        btnCharger.setText("Charger");
        btnCharger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChargerActionPerformed(evt);
            }
        });

        jLabel11.setText("m³");

        btnAnnuler.setFont(new java.awt.Font("Tahoma", 2, 11));
        btnAnnuler.setText("Annuler");
        btnAnnuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnnulerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblVolume, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel11))
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblCiterneNom, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnCharger)
                                    .addComponent(btnAnnuler)
                                    .addComponent(btnOK))
                                .addGap(77, 77, 77))
                            .addComponent(cbxContent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtQuantité, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblProdDispo, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel10))))
                .addContainerGap())
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAnnuler, btnCharger, btnOK});

        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                .addComponent(lblCiterneNom, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(btnCharger, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAnnuler, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                    .addComponent(jLabel8)
                                    .addComponent(lblVolume, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11)))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnOK, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(cbxContent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel5)
                                .addComponent(jLabel6))
                            .addComponent(lblProdDispo, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtQuantité, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAnnuler, btnOK});

        jLabel4.setText("Aller à:");

        cbxSélectDest.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Sélectionner déstination", "Citernes", "Quitter" }));
        cbxSélectDest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxSélectDestActionPerformed(evt);
            }
        });

        btnAller.setText("OK");
        btnAller.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAllerActionPerformed(evt);
            }
        });

        btnDéconnecter.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.darkShadow"));
        btnDéconnecter.setFont(new java.awt.Font("Tahoma", 1, 11));
        btnDéconnecter.setText("Déconnecter");
        btnDéconnecter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDéconnecterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(cbxSélectDest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAller)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 358, Short.MAX_VALUE)
                        .addComponent(btnDéconnecter)
                        .addGap(85, 85, 85))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 795, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxSélectDest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAller)
                    .addComponent(btnDéconnecter)
                    .addComponent(jLabel4))
                .addGap(75, 75, 75))
        );

        jTabbedPane1.addTab("Citernes", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 820, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 498, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        formRefresh();
        for (int i = 0; i < getDaos().getProduitDAO().getAllProduit().size(); i++) {
            cbxContent.addItem(getDaos().getProduitDAO().getAllProduit().get(i).getName());
        }
        buttonEnabler(true);
    }//GEN-LAST:event_formWindowOpened

    private void cbxSélectDestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxSélectDestActionPerformed
        déstination = cbxSélectDest.getSelectedItem().toString();
    }//GEN-LAST:event_cbxSélectDestActionPerformed

    private void btnAllerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAllerActionPerformed
        if (déstination.equals("Citernes")) {
            citerneUI.setGestCit(this);
            citerneUI.setVisible(true);
        } else if (déstination.equals("Quitter")) {
            int i = JOptionPane.showConfirmDialog(null, "Voulez-vous quitter l'applicaiton?", "Confirmer", JOptionPane.YES_NO_CANCEL_OPTION);
            if (i == JOptionPane.YES_OPTION) {
                this.setVisible(false);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Précisez votre déstination.", "Attention", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAllerActionPerformed

    private void btnDéconnecterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDéconnecterActionPerformed
        int i = JOptionPane.showConfirmDialog(null, "Voulez-vous quitter l'applicaiton?", "Confirmer", JOptionPane.YES_NO_CANCEL_OPTION);
        if (i == JOptionPane.YES_OPTION) {
            this.setVisible(false);
        }
    }//GEN-LAST:event_btnDéconnecterActionPerformed

    private void lstProdDispoValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstProdDispoValueChanged
        if (listLoad == true) {
            listProdDetails();
        }
    }//GEN-LAST:event_lstProdDispoValueChanged

    private void cbxContentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxContentActionPerformed
        chosenContent = cbxContent.getSelectedItem().toString();
        for (int i = 0; i < getDaos().getProduitDAO().getAllProduit().size(); i++) {
            if (chosenContent.equals(getDaos().getProduitDAO().getAllProduit().get(i).getName())) {
                lblProdDispo.setText(Double.toString(getDaos().getTotalProduitDélivréDAO().getTotalProduitByProduitId(getDaos().getProduitDAO().getAllProduit().get(i).getId()).getQuantité()));
                break;
            } else if (chosenContent.equals("Sélectionner contenu")) {
                lblProdDispo.setText("");
            } else {
                continue;
            }
        }
    }//GEN-LAST:event_cbxContentActionPerformed

    private void lstCiterneVideValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstCiterneVideValueChanged
        if (listLoadCit == true) {
            listCiterneDetails();
        }
    }//GEN-LAST:event_lstCiterneVideValueChanged

    private void btnChargerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChargerActionPerformed
        buttonEnabler(false);
    }//GEN-LAST:event_btnChargerActionPerformed

    private void btnAnnulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnnulerActionPerformed
        buttonEnabler(true);
        txtQuantité.setText("");
        cbxContent.setSelectedIndex(0);
    }//GEN-LAST:event_btnAnnulerActionPerformed

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        double quantité = 0.0;
        if (lblProdDispo.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Veuillez sélectionner le produit à charger.", "Attention", JOptionPane.ERROR_MESSAGE);
        } else {
            if (txtQuantité.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Veuillez précisez la quantité à charger.", "Attention", JOptionPane.ERROR_MESSAGE);
            } else {
                try {
                    boolean charger = false;
                    boolean totalUpdate = false;
                    quantité = Double.parseDouble(txtQuantité.getText());
                    Citerne cit = getDaos().getCiterneDAO().getCiterneByName(lstCiterneVide.getSelectedValue().toString());
                    TotalProduitDélivré prod = getDaos().getTotalProduitDélivréDAO().getTotalById(cit.getProduitId());
                    double rest = prod.getQuantité() - quantité;

                    if (rest >= 0) {
                        if (cit.getCapacity() * 1000 >= quantité) {
                            prod.setQuantité(rest);
                            totalUpdate = getDaos().getTotalProduitDélivréDAO().updateTotalProduitDélivré(prod);
                            cit.setProduitId(getDaos().getTotalProduitDélivréDAO().getTotalProduitByProduitId(getDaos().getProduitDAO().getProduitByName(chosenContent).getId()).getId());
                            cit.setQuantité(quantité);
                            charger = getDaos().getCiterneDAO().updateCiterne(cit);
                        } else {
                            JOptionPane.showMessageDialog(null, "Votre citerne n'est pas assez grand.", "Attention", JOptionPane.ERROR_MESSAGE);
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Vous n'avez pas assez de " + cbxContent.getSelectedItem().toString() + " à livré.", "Attention", JOptionPane.ERROR_MESSAGE);
                    }
                    if (charger && totalUpdate) {
                        formRefresh();
                        JOptionPane.showMessageDialog(null, "Chargement réussi.", "Confirmation", JOptionPane.INFORMATION_MESSAGE);
                        buttonEnabler(true);
                    }

                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(null, "Précisez la quantité en chiffres.", "Attention", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_btnOKActionPerformed

    private void btnModifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifierActionPerformed
        int i = tblCiterneInUse.getSelectedRow();
        if (i != -1) {
            addInCiterneUI.setCiterneNom(tblCiterneInUse.getModel().getValueAt(tblCiterneInUse.getSelectedRow(), 0).toString());
            addInCiterneUI.setCiterneVolume(Double.parseDouble(tblCiterneInUse.getModel().getValueAt(tblCiterneInUse.getSelectedRow(), 1).toString()));
            addInCiterneUI.setCiterneContent(tblCiterneInUse.getModel().getValueAt(tblCiterneInUse.getSelectedRow(), 2).toString());
            addInCiterneUI.setActualQuantity(Double.parseDouble(tblCiterneInUse.getModel().getValueAt(tblCiterneInUse.getSelectedRow(), 3).toString()));
            addInCiterneUI.setQuantitéDispo(getDaos().getTotalProduitDélivréDAO().getTotalProduitByProduitId(getDaos().getProduitDAO().getProduitByName(addInCiterneUI.getCiterneContent()).getId()).getQuantité());
            addInCiterneUI.setVisible(true);
            addInCiterneUI.setGestCit(this);
        } else {
            JOptionPane.showMessageDialog(null, "Sélectionnez le citerne à modifier.", "Attention", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnModifierActionPerformed

    public void checkCiterne() {
        List<Citerne> citernes = getDaos().getCiterneDAO().getAllCiterne();
        inUseCiterne = new ArrayList<Citerne>();
        emptyCiterne = new ArrayList<Citerne>();
        for (Citerne cit : citernes) {
            if (cit.getQuantité() != 0.0) {
                inUseCiterne.add(cit);
            } else {
                emptyCiterne.add(cit);
            }
        }
    }

    public void listDisplay(List<Citerne> enUsage, List<Citerne> vides) {
        lstCiterneModel.clear();
        citVideIds.clear();

        citerneInUse = new Object[enUsage.size()][tblCiterneInUse.getColumnCount()];
        tableColumns = new Object[tblCiterneInUse.getColumnCount()];
        for (int i = 0; i < enUsage.size(); i++) {
            citerneInUse[i][0] = enUsage.get(i).getName();
            citerneInUse[i][1] = enUsage.get(i).getCapacity();
            citerneInUse[i][2] = getDaos().getProduitDAO().getProduitById(getDaos().getTotalProduitDélivréDAO().getTotalById(enUsage.get(i).getProduitId()).getProduitId()).getName();
            citerneInUse[i][3] = enUsage.get(i).getQuantité();
        }
        for (int i = 0; i < tblCiterneInUse.getColumnCount(); i++) {
            tableColumns[i] = tblCiterneInUse.getColumnName(i);
        }
        tblCiterneInUse.setModel(new DefaultTableModel(citerneInUse, tableColumns));

//-------------------------------------------------------------------------------

        for (Citerne cit : vides) {
            citVideIds.add(cit.getId());
            lstCiterneModel.addElement(cit.getName());
        }
        lstCiterneVide.setModel(lstCiterneModel);
    }

    public void listDisplay(List<ProduitDélivré> produits) {
        lstProdModel.clear();
        prodIds.clear();
        for (ProduitDélivré prod : produits) {
            lstProdModel.addElement(getDaos().getProduitDAO().getProduitById(prod.getProduit_id()).getName());
            prodIds.add(prod.getId());
        }
        lstProdDispo.setModel(lstProdModel);
    }

    public void listProdDetails() {
        produitDeliv = new ProduitDélivré();
        int prodIndex = lstProdDispo.getSelectedIndex();
        int prodId = prodIds.get(prodIndex);
        produitDeliv = getDaos().getProduitDélivréDAO().getProduitDélivréByLivraisonId(prodId);
        prodFillIn(produitDeliv);
    }

    public void listCiterneDetails() {
        citerne = new Citerne();
        int citIndex = lstCiterneVide.getSelectedIndex();
        int citId = 0;
        if (!citVideIds.isEmpty()) {
            citId = citVideIds.get(citIndex);
            citerne = getDaos().getCiterneDAO().getCiterneById(citId);
            citFillIn(citerne);
        }
    }

    public void prodFillIn(ProduitDélivré produit) {
        lblNom.setText(getDaos().getProduitDAO().getProduitById(produit.getProduit_id()).getName());
        lblDélivreur.setText(getTechDAOImpl().getTechnicienById(produit.getDélivreur_id()).getLastName().concat(" " + getTechDAOImpl().getTechnicienById(produit.getDélivreur_id()).getFirstName()));
        lblQuantité.setText(Double.toString(produit.getQuantité()));
    }

    public void citFillIn(Citerne citerne) {
        lblCiterneNom.setText(citerne.getName());
        lblVolume.setText(Double.toString(citerne.getCapacity()));
    }

    public void formRefresh() {
        checkCiterne();
        listLoad = false;
        listLoadCit = false;
        listDisplay(inUseCiterne, emptyCiterne);
        List<ProduitDélivré> produit = getDaos().getProduitDélivréDAO().getAllProduitDélivré();
        listDisplay(produit);
        lstProdDispo.setSelectedIndex(0);
        lstCiterneVide.setSelectedIndex(0);
        listProdDetails();
        listCiterneDetails();
        listLoad = true;
        listLoadCit = true;
    }

    public void buttonEnabler(boolean enabler) {
        cbxContent.setEnabled(!enabler);
        btnCharger.setEnabled(enabler);
        btnOK.setEnabled(!enabler);
        btnAnnuler.setEnabled(!enabler);
        txtQuantité.setEnabled(!enabler);
    }
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAller;
    private javax.swing.JButton btnAnnuler;
    private javax.swing.JButton btnCharger;
    private javax.swing.JButton btnDéconnecter;
    private javax.swing.JButton btnModifier;
    private javax.swing.JButton btnOK;
    private javax.swing.JComboBox cbxContent;
    private javax.swing.JComboBox cbxSélectDest;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblCiterneNom;
    private javax.swing.JLabel lblDélivreur;
    private javax.swing.JLabel lblNom;
    private javax.swing.JLabel lblProdDispo;
    private javax.swing.JLabel lblQuantité;
    private javax.swing.JLabel lblVolume;
    private javax.swing.JList lstCiterneVide;
    private javax.swing.JList lstProdDispo;
    private javax.swing.JTable tblCiterneInUse;
    private javax.swing.JTextField txtQuantité;
    // End of variables declaration//GEN-END:variables
}
