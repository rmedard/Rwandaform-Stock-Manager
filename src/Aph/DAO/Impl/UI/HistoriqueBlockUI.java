/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * HistoriqueBlockUI.java
 *
 * Created on Feb 26, 2011, 10:24:25 AM
 */
package Aph.DAO.Impl.UI;

import Aph.BlockDélivré;
import Aph.DAO.Impl.TechnicienBlockDAOImpl;
import java.text.DateFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Medard
 */
public class HistoriqueBlockUI extends javax.swing.JFrame {

    private DateFormat ft;
    private DAOS daos;
    private TechnicienBlockDAOImpl techDAOImpl = new TechnicienBlockDAOImpl();
    private List<Integer> techIds = new ArrayList<Integer>();
    private String retirantNameTri;
    private boolean periodValidator;

    /** Creates new form HistoriqueBlockUI */
    public HistoriqueBlockUI() {
        initComponents();
        this.setTitle("Historique blocks");
        daos = new DAOS();
        ft = DateFormat.getDateInstance(DateFormat.LONG, Locale.FRANCE);
        dtSince.setDateFormat(ft);
        dtUntil.setDateFormat(ft);
        periodValidator = false;
        dtSince.setEnabled(false);
        dtUntil.setEnabled(false);
        cbxRetirantTri.setEnabled(false);
        tblHistBlock.setEnabled(false);
    }

    public DAOS getDaos() {
        return daos;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblHistBlock = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        cbxRetirantTri = new javax.swing.JComboBox();
        chbxRetirantTri = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        dtSince = new datechooser.beans.DateChooserCombo();
        dtUntil = new datechooser.beans.DateChooserCombo();
        chbxDateTri = new javax.swing.JCheckBox();
        btnOK = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        btnPrint = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        tblHistBlock.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Block", "Retirant", "Nombre", "Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblHistBlock);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tri rafiné par date et/ou retirant", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 204))); // NOI18N

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        cbxRetirantTri.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Tous les retirants" }));
        cbxRetirantTri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxRetirantTriActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbxRetirantTri, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbxRetirantTri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        chbxRetirantTri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbxRetirantTriActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(dtUntil, javax.swing.GroupLayout.Alignment.LEADING, 0, 0, Short.MAX_VALUE)
                    .addComponent(dtSince, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE))
                .addGap(9, 9, 9))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dtSince, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dtUntil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        chbxDateTri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbxDateTriActionPerformed(evt);
            }
        });

        btnOK.setText("OK");
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(chbxDateTri)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(chbxRetirantTri)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnOK)
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(chbxDateTri)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(chbxRetirantTri)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(btnOK)))
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Imprimer", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 204))); // NOI18N

        btnPrint.setText("Imprimer");
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnPrint)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnPrint)
                .addContainerGap())
        );

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 448, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        tableDisplay(getDaos().getBlockDélivréDAO().getAllBlockDélivré());
        for(int i=0; i<techDAOImpl.getAllTechniciens().size();i++){
             cbxRetirantTri.addItem(techDAOImpl.getAllTechniciens().get(i).getLastName().concat(techDAOImpl.getAllTechniciens().get(i).getFirstName()));
             techIds.add(techDAOImpl.getAllTechniciens().get(i).getId());
        }
    }//GEN-LAST:event_formWindowOpened

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        if (chbxDateTri.isSelected() && !chbxRetirantTri.isSelected()) {
            if (dtSince.getSelectedDate().after(dtUntil.getSelectedDate())) {
                JOptionPane.showMessageDialog(null, "Corrigez votre intervale des dates.", "Attention", JOptionPane.ERROR_MESSAGE);
            } else {
                periodValidator = true;
                List<BlockDélivré> produits = getDaos().getBlockDélivréDAO().getBlockDélivréByPeriod(new java.sql.Date(dtSince.getSelectedDate().getTimeInMillis()), new java.sql.Date(dtUntil.getSelectedDate().getTimeInMillis()));
                tableDisplay(produits);
            }
        } else if (!chbxDateTri.isSelected() && chbxRetirantTri.isSelected()) {
            if (retirantNameTri.equals("Tous les retirants")) {
                List<BlockDélivré> produits = getDaos().getBlockDélivréDAO().getAllBlockDélivré();
                tableDisplay(produits);
            } else {
                List<BlockDélivré> blocks = getDaos().getBlockDélivréDAO().getBlockDélivréByRetirantId(techDAOImpl.getTechnicienById(techIds.get(cbxRetirantTri.getSelectedIndex() - 1)).getId());
                tableDisplay(blocks);
            }
        } else if (chbxDateTri.isSelected() && chbxRetirantTri.isSelected()) {
            if (dtSince.getSelectedDate().after(dtUntil.getSelectedDate())) {
                periodValidator = false;
                JOptionPane.showMessageDialog(null, "Corrigez votre intervale des dates.", "Attention", JOptionPane.ERROR_MESSAGE);
            } else if (retirantNameTri.equals("Tous les retirants")) {
                periodValidator = true;
                List<BlockDélivré> blocks = getDaos().getBlockDélivréDAO().getBlockDélivréByPeriod(new java.sql.Date(dtSince.getSelectedDate().getTimeInMillis()), new java.sql.Date(dtUntil.getSelectedDate().getTimeInMillis()));
                tableDisplay(blocks);
            } else {
                periodValidator = true;
                List<BlockDélivré> blocks = getDaos().getBlockDélivréDAO().getBlockDélivréByPeriodAndRetirant(new java.sql.Date(dtSince.getSelectedDate().getTimeInMillis()), new java.sql.Date(dtUntil.getSelectedDate().getTimeInMillis()), techDAOImpl.getTechnicienById(techIds.get(cbxRetirantTri.getSelectedIndex() - 1)));
                tableDisplay(blocks);
            }
        }
        btnPrint.setEnabled(true);
    }//GEN-LAST:event_btnOKActionPerformed

    private void cbxRetirantTriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxRetirantTriActionPerformed
        retirantNameTri = cbxRetirantTri.getSelectedItem().toString();
    }//GEN-LAST:event_cbxRetirantTriActionPerformed

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
         Reports view = new Reports();
        if (!chbxDateTri.isSelected() && !chbxRetirantTri.isSelected()) {
            view.viewBlockLivraisonAll();
        } else if (!chbxDateTri.isSelected() && chbxRetirantTri.isSelected()) {
            if (cbxRetirantTri.getSelectedItem().toString().equals("Tous les retirants")) {
                view.viewBlockLivraisonAll();
            } else {
                view.viewRequisitionBlockByTech(techDAOImpl.getTechnicienById(techIds.get(cbxRetirantTri.getSelectedIndex() - 1)));
            }
        } else if (chbxDateTri.isSelected() && !chbxRetirantTri.isSelected()) {
            if (periodValidator) {
                view.viewRequisitionBlockByPeriod(dtSince.getSelectedDate().getTime(), dtUntil.getSelectedDate().getTime());
            } else {
                JOptionPane.showMessageDialog(null, "Visualisez d'abord en cliquant sur OK.", "Attention", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            if (!periodValidator) {
                JOptionPane.showMessageDialog(null, "Visualisez d'abord en cliquant sur OK.", "Attention", JOptionPane.ERROR_MESSAGE);
            } else {
                if (retirantNameTri.equals("Tous les retirants")) {
                    view.viewRequisitionBlockByPeriod(dtSince.getSelectedDate().getTime(), dtUntil.getSelectedDate().getTime());
                } else {
                    view.viewRequisitionBlockByPeriodAndTech(dtSince.getSelectedDate().getTime(), dtUntil.getSelectedDate().getTime(), techDAOImpl.getTechnicienById(techIds.get(cbxRetirantTri.getSelectedIndex() - 1)));
                }
            }
        }
    }//GEN-LAST:event_btnPrintActionPerformed

    private void chbxDateTriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbxDateTriActionPerformed
         if (chbxDateTri.isSelected()) {
            dtSince.setEnabled(true);
            dtUntil.setEnabled(true);
            btnPrint.setEnabled(false);
        } else {
            dtSince.setEnabled(false);
            dtUntil.setEnabled(false);
            btnPrint.setEnabled(true);
        }
    }//GEN-LAST:event_chbxDateTriActionPerformed

    private void chbxRetirantTriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbxRetirantTriActionPerformed
         if (chbxRetirantTri.isSelected()) {
            cbxRetirantTri.setEnabled(true);
            cbxRetirantTri.setSelectedIndex(0);
            btnPrint.setEnabled(false);
        } else {
            cbxRetirantTri.setEnabled(false);
            btnPrint.setEnabled(true);
        }
    }//GEN-LAST:event_chbxRetirantTriActionPerformed
    public void tableDisplay(List<BlockDélivré> blocks) {
        Object[] columns = new Object[tblHistBlock.getColumnCount()];
        for (int i = 0; i < tblHistBlock.getColumnCount(); i++) {
            columns[i] = tblHistBlock.getColumnName(i);
        }
        Object[][] rowData = new Object[blocks.size()][tblHistBlock.getColumnCount()];
        for (int i = 0; i < blocks.size(); i++) {
            rowData[i][0] = getDaos().getProduitSemiFiniDAO().getProduitSemiFiniById(blocks.get(i).getBlock_id()).getName();
            rowData[i][1] = techDAOImpl.getTechnicienById(blocks.get(i).getTechn_id()).getLastName().concat(techDAOImpl.getTechnicienById(blocks.get(i).getTechn_id()).getFirstName());
            rowData[i][2] = blocks.get(i).getNumberSections();
            rowData[i][3] = blocks.get(i).getDate();
        }
        tblHistBlock.setModel(new DefaultTableModel(rowData, columns));
    }
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOK;
    private javax.swing.JButton btnPrint;
    private javax.swing.JComboBox cbxRetirantTri;
    private javax.swing.JCheckBox chbxDateTri;
    private javax.swing.JCheckBox chbxRetirantTri;
    private datechooser.beans.DateChooserCombo dtSince;
    private datechooser.beans.DateChooserCombo dtUntil;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblHistBlock;
    // End of variables declaration//GEN-END:variables
}
