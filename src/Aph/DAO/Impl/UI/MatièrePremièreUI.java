package Aph.DAO.Impl.UI;

import Aph.Densité;
import Aph.MatièrePremière;
import Aph.Produit;
import java.text.DateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import java.util.Locale;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/*
 * MatièrePremièreUI.java
 *
 * Created on Dec 18, 2010, 12:23:22 PM
 */
/**
 *
 * @author Medard
 */
public class MatièrePremièreUI extends javax.swing.JFrame {

    private DAOS daos;
    private int currentRow;
    private List<Integer> prodIds = new ArrayList<Integer>();
    private List<Integer> ids = new ArrayList<Integer>();
    private DefaultListModel listmodel = new DefaultListModel();
    private boolean listLoad;
    private boolean saveOrUpdate;
    private MatièrePremière matière;
    private Calendar calProd, calExp;
    private DateFormat ft;
    private String searchCriterion;
    private Produit produit;
    private Gestion_Produit getsProd;

    /** Creates new form MatièrePremièreUI */
    public MatièrePremièreUI() {
        initComponents();
        this.setTitle("Matières premières");
        daos = new DAOS();
        ft = DateFormat.getDateInstance(DateFormat.LONG, Locale.FRANCE);
        dtProduction.setDateFormat(ft);
        dtExpiry.setDateFormat(ft);
    }

    public DAOS getDaos() {
        return daos;
    }

    public Gestion_Produit getGetsProd() {
        return getsProd;
    }

    public void setGetsProd(Gestion_Produit getsProd) {
        this.getsProd = getsProd;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lstMatièrepremière = new javax.swing.JList();
        txtOrigine = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnAjouter = new javax.swing.JButton();
        btnModifier = new javax.swing.JButton();
        btnEnregistrer = new javax.swing.JButton();
        btnEffacer = new javax.swing.JButton();
        btnAnnuler = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        cbxCriterion = new javax.swing.JComboBox();
        txtSearch = new javax.swing.JTextField();
        btnChercher = new javax.swing.JButton();
        btnPrevious = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        txtQuantity = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        dtProduction = new datechooser.beans.DateChooserCombo();
        dtExpiry = new datechooser.beans.DateChooserCombo();
        btnValidate = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        lstMatièrepremière.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstMatièrepremièreValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstMatièrepremière);

        jLabel2.setText("Name");

        jLabel3.setText("Origine");

        jLabel4.setText("Date de production");

        jLabel5.setText("Date d'expiration");

        jLabel1.setFont(new java.awt.Font("Colonna MT", 3, 24));
        jLabel1.setText("Matière première");

        btnAjouter.setText("Ajouter");
        btnAjouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAjouterActionPerformed(evt);
            }
        });

        btnModifier.setText("Modifier");
        btnModifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifierActionPerformed(evt);
            }
        });

        btnEnregistrer.setText("Enregistrer");
        btnEnregistrer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnregistrerActionPerformed(evt);
            }
        });

        btnEffacer.setText("Effacer");
        btnEffacer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEffacerActionPerformed(evt);
            }
        });

        btnAnnuler.setText("Annuler");
        btnAnnuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnnulerActionPerformed(evt);
            }
        });

        jLabel6.setText("Rechercher");

        cbxCriterion.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Sélectionner critère", "Nom", "Origine", "Tous les produits" }));
        cbxCriterion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxCriterionActionPerformed(evt);
            }
        });

        btnChercher.setText("Chercher");
        btnChercher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChercherActionPerformed(evt);
            }
        });

        btnPrevious.setText("<");

        btnNext.setText(">");

        jLabel8.setText("Quantité");

        jLabel9.setText("litres");

        try {
            dtProduction.setDefaultPeriods(new datechooser.model.multiple.PeriodSet());
        } catch (datechooser.model.exeptions.IncompatibleDataExeption e1) {
            e1.printStackTrace();
        }

        try {
            dtExpiry.setDefaultPeriods(new datechooser.model.multiple.PeriodSet());
        } catch (datechooser.model.exeptions.IncompatibleDataExeption e1) {
            e1.printStackTrace();
        }

        btnValidate.setText("Valider");
        btnValidate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnValidateActionPerformed(evt);
            }
        });

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(cbxCriterion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnChercher)
                .addGap(155, 155, 155))
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnAjouter, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnModifier, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEnregistrer, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEffacer, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAnnuler, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel8))
                                .addGap(15, 15, 15)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(dtProduction, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(dtExpiry, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel9)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(btnValidate))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(txtOrigine, javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txtName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btnPrevious, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)))))
                .addGap(14, 14, 14))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 588, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnNext, btnPrevious});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnPrevious)
                                .addComponent(btnNext)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtOrigine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dtProduction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dtExpiry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel9)
                                .addComponent(btnValidate, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnModifier)
                            .addComponent(btnEnregistrer)
                            .addComponent(btnEffacer)
                            .addComponent(btnAnnuler)
                            .addComponent(btnAjouter)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxCriterion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnChercher)
                    .addComponent(jLabel6))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAjouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAjouterActionPerformed
        txtName.setText("");
        txtOrigine.setText("");
        dtProduction.setSelectedDate(null);
        dtExpiry.setSelectedDate(null);
        txtQuantity.setText("");
        txtName.requestFocus();
        currentRow = lstMatièrepremière.getSelectedIndex();
        buttonEnabler(false);
        saveOrUpdate = true;
    }//GEN-LAST:event_btnAjouterActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        listDisplay(getDaos().getMatièrePremièreDAO().getAllMatièrePremière());
        listLoad = false;
        lstMatièrepremière.setSelectedIndex(0);
        listDetails();
        buttonEnabler(true);
        listLoad = true;
    }//GEN-LAST:event_formWindowOpened

    private void lstMatièrepremièreValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstMatièrepremièreValueChanged
        if (listLoad == true) {
            listDetails();
        }
    }//GEN-LAST:event_lstMatièrepremièreValueChanged

    private void btnEnregistrerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnregistrerActionPerformed
        MatièrePremière mat = new MatièrePremière();
        Produit prod = null;
        listLoad = false;
        if (saveOrUpdate) {

            if (produit != null) {
                prod = getDaos().getProduitDAO().getProduitByName(produit.getName());
                java.sql.Date productionDate = new java.sql.Date(dtProduction.getSelectedDate().getTimeInMillis());
                java.sql.Date expiryDate = new java.sql.Date(dtExpiry.getSelectedDate().getTimeInMillis());
                if (productionDate.before(expiryDate)) {
                    mat = new MatièrePremière(txtOrigine.getText(), productionDate, expiryDate, prod.getQuantité());
                    MatièrePremière m = getDaos().getMatièrePremièreDAO().createMatièrePremière(prod, mat);
                    if (m != null) {
                        JOptionPane.showMessageDialog(null, "Enregistrement effectué", "Enregistrement", JOptionPane.INFORMATION_MESSAGE);
                        int i = getDaos().getProduitDAO().getAllProduit().size();
                        for (Densité dens : getDaos().getDensitéDAO().getAllDensité()) {
                            dens.setConsRowNum(i);
                            Object cons[][] = new Object[i][2];
                            Produit pr = null;
                            for (int j = 0; j < i; j++) {
                                if (j == i - 1) {
                                    cons[j][0] = getDaos().getProduitDAO().getAllProduit().get(j).getName();
                                    cons[j][1] = 0.0;
                                    pr = getDaos().getProduitDAO().getAllProduit().get(j);
                                } else {
                                    cons[j][0] = dens.getConsommation()[j][0];
                                    cons[j][1] = dens.getConsommation()[j][1];
                                }
                            }
                            dens.setConsommation(cons);
                            getDaos().getDensitéDAO().updateDensité(dens, pr);
                        }
                        updator(m);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Les dates sont incorrectes.", "Attention", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            mat = getDaos().getMatièrePremièreDAO().getMatièrePremièreById(ids.get(lstMatièrepremière.getSelectedIndex()));
            prod = getDaos().getProduitDAO().getProduitById(mat.getProductId());
            prod.setName(txtName.getText());
            mat.setOrigine(txtOrigine.getText());
            mat.setDateProduction(new java.sql.Date(dtProduction.getSelectedDate().getTimeInMillis()));
            mat.setDateExpiration(new java.sql.Date(dtExpiry.getSelectedDate().getTimeInMillis()));
            mat.setQuantity(Double.parseDouble(txtQuantity.getText()));
            boolean updated = getDaos().getMatièrePremièreDAO().updateMatièrePremière(prod, mat);
            if (updated) {
                JOptionPane.showMessageDialog(null, "Modification effectuée", "Modification", JOptionPane.INFORMATION_MESSAGE);
                updator(mat);
            }
        }
        listDisplay(getDaos().getMatièrePremièreDAO().getAllMatièrePremière());
        listLoad = true;
        lstMatièrepremière.setSelectedValue(prod.getName(), true);
        lstMatièrepremière.requestFocus();
        buttonEnabler(true);
    }//GEN-LAST:event_btnEnregistrerActionPerformed

    private void btnModifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifierActionPerformed
        buttonEnabler(false);
        saveOrUpdate = false;
        currentRow = lstMatièrepremière.getSelectedIndex();
        txtName.requestFocus();
    }//GEN-LAST:event_btnModifierActionPerformed

    private void btnAnnulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnnulerActionPerformed
        buttonEnabler(true);
        lstMatièrepremière.setSelectedIndex(currentRow);
        lstMatièrepremière.requestFocus();
    }//GEN-LAST:event_btnAnnulerActionPerformed

    private void btnChercherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChercherActionPerformed
        List<MatièrePremière> searchReturn = new ArrayList<MatièrePremière>();
        if (searchCriterion.equals("Sélectionner critère")) {
            JOptionPane.showMessageDialog(null, "Sélectionnez critère de recherche, S.V.P", "Halte", JOptionPane.ERROR_MESSAGE);
        } else {
            if (searchCriterion.equals("Nom")) {
                searchReturn = getDaos().getMatièrePremièreDAO().getMatièrePremièreByName(txtSearch.getText());
            } else if (searchCriterion.equals("Origine")) {
                searchReturn = getDaos().getMatièrePremièreDAO().getMatièrePremièreByOrigine(txtSearch.getText());
            } else if (searchCriterion.equals("Tous les produits")) {
                searchReturn = getDaos().getMatièrePremièreDAO().getAllMatièrePremière();
            }
            if (searchReturn.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Aucun produit trouvé, veuillez réessayer", "Halte", JOptionPane.ERROR_MESSAGE);
            } else {
                listLoad = false;
                listDisplay(searchReturn);
                lstMatièrepremière.setSelectedIndex(0);
                listDetails();
                listLoad = true;
            }
            lstMatièrepremière.requestFocus();
        }
    }//GEN-LAST:event_btnChercherActionPerformed

    private void cbxCriterionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxCriterionActionPerformed
        searchCriterion = cbxCriterion.getSelectedItem().toString();
    }//GEN-LAST:event_cbxCriterionActionPerformed

    private void btnEffacerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEffacerActionPerformed
        int i = JOptionPane.showConfirmDialog(null, "Voulez-vous éffacer le produit " + lstMatièrepremière.getSelectedValue().toString(), "Confirmez", JOptionPane.YES_NO_CANCEL_OPTION);
        if (i == JOptionPane.YES_OPTION) {
            boolean deleted = getDaos().getMatièrePremièreDAO().deleteMatièrePremière(prodIds.get(lstMatièrepremière.getSelectedIndex()));
            if (deleted) {
                JOptionPane.showMessageDialog(null, "Suppression efféctuée", "Confirmation", JOptionPane.INFORMATION_MESSAGE);
                listLoad = false;
                listDisplay(getDaos().getMatièrePremièreDAO().getAllMatièrePremière());
                lstMatièrepremière.setSelectedIndex(0);
                listDetails();
                listLoad = true;
                lstMatièrepremière.requestFocus();
                updator(null);
            }
        }

    }//GEN-LAST:event_btnEffacerActionPerformed

    private void btnValidateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnValidateActionPerformed
        Produit product = new Produit(txtName.getText(), Double.parseDouble(txtQuantity.getText().toString()));
        produit = getDaos().getProduitDAO().createProduit(product);
        if (produit != null) {
            JOptionPane.showMessageDialog(null, "Produit validé.", "Confirmation", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnValidateActionPerformed

    public void buttonEnabler(boolean enabler) {
        btnEnregistrer.setEnabled(!enabler);
        btnAnnuler.setEnabled(!enabler);
        btnAjouter.setEnabled(enabler);
        btnModifier.setEnabled(enabler);
        btnEffacer.setEnabled(enabler);
        btnChercher.setEnabled(enabler);
        btnPrevious.setEnabled(enabler);
        btnNext.setEnabled(enabler);
    }

    public void listDisplay(List<MatièrePremière> products) {
        prodIds.clear();
        listmodel.clear();
        for (MatièrePremière mat : products) {

            listmodel.addElement(getDaos().getProduitDAO().getProduitById(mat.getProductId()).getName());
            prodIds.add(mat.getProductId());
            ids.add(mat.getId());
        }
        lstMatièrepremière.setModel(listmodel);
    }

    public void listDetails() {

        matière = new MatièrePremière();
        int matIndex = lstMatièrepremière.getSelectedIndex();
        if (!prodIds.isEmpty()) {
            int matId = prodIds.get(matIndex);
            matière = getDaos().getMatièrePremièreDAO().getMatièrePremièreByProduitId(matId).get(0);
            fillIn(matière);
        }
    }

    public void fillIn(MatièrePremière mat) {
        txtName.setText(getDaos().getProduitDAO().getProduitById(mat.getProductId()).getName());
        txtOrigine.setText(mat.getOrigine());
        calProd = Calendar.getInstance();
        calExp = Calendar.getInstance();
        calProd.setTime(mat.getDateProduction());
        calExp.setTime(mat.getDateExpiration());
        dtProduction.setSelectedDate(calProd);
        dtExpiry.setSelectedDate(calExp);
        txtQuantity.setText(Double.toString(mat.getQuantity()));
    }

    public void updator(MatièrePremière mat) {
        this.listLoad = false;
        listLoad = false;
        listDisplay(getDaos().getMatièrePremièreDAO().getAllMatièrePremière());
        if (mat != null) {
            lstMatièrepremière.setSelectedIndex(getDaos().getMatièrePremièreDAO().getAllMatièrePremière().size() - 1);
        } else {
            lstMatièrepremière.setSelectedIndex(0);
        }
        listDetails();
        this.getGetsProd().listDisplay(getDaos().getMatièrePremièreDAO().getAllMatièrePremière());
        this.getGetsProd().getLstStock().setSelectedIndex(0);
        this.getGetsProd().listDetails();
        this.listLoad = true;
        listLoad = true;
        this.getGetsProd().getLstStock().requestFocus();
    }
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAjouter;
    private javax.swing.JButton btnAnnuler;
    private javax.swing.JButton btnChercher;
    private javax.swing.JButton btnEffacer;
    private javax.swing.JButton btnEnregistrer;
    private javax.swing.JButton btnModifier;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrevious;
    private javax.swing.JButton btnValidate;
    private javax.swing.JComboBox cbxCriterion;
    private datechooser.beans.DateChooserCombo dtExpiry;
    private datechooser.beans.DateChooserCombo dtProduction;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JList lstMatièrepremière;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtOrigine;
    private javax.swing.JTextField txtQuantity;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
